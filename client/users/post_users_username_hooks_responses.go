// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// PostUsersUsernameHooksReader is a Reader for the PostUsersUsernameHooks structure.
type PostUsersUsernameHooksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersUsernameHooksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostUsersUsernameHooksCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostUsersUsernameHooksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostUsersUsernameHooksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostUsersUsernameHooksCreated creates a PostUsersUsernameHooksCreated with default headers values
func NewPostUsersUsernameHooksCreated() *PostUsersUsernameHooksCreated {
	return &PostUsersUsernameHooksCreated{}
}

/*PostUsersUsernameHooksCreated handles this case with default header values.

The newly installed webhook.
*/
type PostUsersUsernameHooksCreated struct {
	/*The URL of new newly created webhook.
	 */
	Location string

	Payload *models.WebhookSubscription
}

func (o *PostUsersUsernameHooksCreated) Error() string {
	return fmt.Sprintf("[POST /users/{username}/hooks][%d] postUsersUsernameHooksCreated  %+v", 201, o.Payload)
}

func (o *PostUsersUsernameHooksCreated) GetPayload() *models.WebhookSubscription {
	return o.Payload
}

func (o *PostUsersUsernameHooksCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.WebhookSubscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersUsernameHooksForbidden creates a PostUsersUsernameHooksForbidden with default headers values
func NewPostUsersUsernameHooksForbidden() *PostUsersUsernameHooksForbidden {
	return &PostUsersUsernameHooksForbidden{}
}

/*PostUsersUsernameHooksForbidden handles this case with default header values.

If the authenticated user is accessing an account other than their own.
*/
type PostUsersUsernameHooksForbidden struct {
	Payload *models.Error
}

func (o *PostUsersUsernameHooksForbidden) Error() string {
	return fmt.Sprintf("[POST /users/{username}/hooks][%d] postUsersUsernameHooksForbidden  %+v", 403, o.Payload)
}

func (o *PostUsersUsernameHooksForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUsersUsernameHooksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersUsernameHooksNotFound creates a PostUsersUsernameHooksNotFound with default headers values
func NewPostUsersUsernameHooksNotFound() *PostUsersUsernameHooksNotFound {
	return &PostUsersUsernameHooksNotFound{}
}

/*PostUsersUsernameHooksNotFound handles this case with default header values.

If the specified account does not exist.
*/
type PostUsersUsernameHooksNotFound struct {
	Payload *models.Error
}

func (o *PostUsersUsernameHooksNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{username}/hooks][%d] postUsersUsernameHooksNotFound  %+v", 404, o.Payload)
}

func (o *PostUsersUsernameHooksNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUsersUsernameHooksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
