// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// PostTeamsUsernameHooksReader is a Reader for the PostTeamsUsernameHooks structure.
type PostTeamsUsernameHooksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTeamsUsernameHooksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostTeamsUsernameHooksCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostTeamsUsernameHooksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostTeamsUsernameHooksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostTeamsUsernameHooksCreated creates a PostTeamsUsernameHooksCreated with default headers values
func NewPostTeamsUsernameHooksCreated() *PostTeamsUsernameHooksCreated {
	return &PostTeamsUsernameHooksCreated{}
}

/*PostTeamsUsernameHooksCreated handles this case with default header values.

The newly installed webhook.
*/
type PostTeamsUsernameHooksCreated struct {
	/*The URL of new newly created webhook.
	 */
	Location string

	Payload *models.WebhookSubscription
}

func (o *PostTeamsUsernameHooksCreated) Error() string {
	return fmt.Sprintf("[POST /teams/{username}/hooks][%d] postTeamsUsernameHooksCreated  %+v", 201, o.Payload)
}

func (o *PostTeamsUsernameHooksCreated) GetPayload() *models.WebhookSubscription {
	return o.Payload
}

func (o *PostTeamsUsernameHooksCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.WebhookSubscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsUsernameHooksForbidden creates a PostTeamsUsernameHooksForbidden with default headers values
func NewPostTeamsUsernameHooksForbidden() *PostTeamsUsernameHooksForbidden {
	return &PostTeamsUsernameHooksForbidden{}
}

/*PostTeamsUsernameHooksForbidden handles this case with default header values.

If the authenticated user is not an admin on the specified team.
*/
type PostTeamsUsernameHooksForbidden struct {
	Payload *models.Error
}

func (o *PostTeamsUsernameHooksForbidden) Error() string {
	return fmt.Sprintf("[POST /teams/{username}/hooks][%d] postTeamsUsernameHooksForbidden  %+v", 403, o.Payload)
}

func (o *PostTeamsUsernameHooksForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTeamsUsernameHooksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTeamsUsernameHooksNotFound creates a PostTeamsUsernameHooksNotFound with default headers values
func NewPostTeamsUsernameHooksNotFound() *PostTeamsUsernameHooksNotFound {
	return &PostTeamsUsernameHooksNotFound{}
}

/*PostTeamsUsernameHooksNotFound handles this case with default header values.

If the specified team does not exist.
*/
type PostTeamsUsernameHooksNotFound struct {
	Payload *models.Error
}

func (o *PostTeamsUsernameHooksNotFound) Error() string {
	return fmt.Sprintf("[POST /teams/{username}/hooks][%d] postTeamsUsernameHooksNotFound  %+v", 404, o.Payload)
}

func (o *PostTeamsUsernameHooksNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTeamsUsernameHooksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
