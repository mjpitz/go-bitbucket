// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetTeamsUsernameMembersReader is a Reader for the GetTeamsUsernameMembers structure.
type GetTeamsUsernameMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsUsernameMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsUsernameMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTeamsUsernameMembersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTeamsUsernameMembersOK creates a GetTeamsUsernameMembersOK with default headers values
func NewGetTeamsUsernameMembersOK() *GetTeamsUsernameMembersOK {
	return &GetTeamsUsernameMembersOK{}
}

/*GetTeamsUsernameMembersOK handles this case with default header values.

All members
*/
type GetTeamsUsernameMembersOK struct {
	Payload *models.User
}

func (o *GetTeamsUsernameMembersOK) Error() string {
	return fmt.Sprintf("[GET /teams/{username}/members][%d] getTeamsUsernameMembersOK  %+v", 200, o.Payload)
}

func (o *GetTeamsUsernameMembersOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetTeamsUsernameMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUsernameMembersNotFound creates a GetTeamsUsernameMembersNotFound with default headers values
func NewGetTeamsUsernameMembersNotFound() *GetTeamsUsernameMembersNotFound {
	return &GetTeamsUsernameMembersNotFound{}
}

/*GetTeamsUsernameMembersNotFound handles this case with default header values.

When the team does not exist, or multiple teams with the same name exist that differ only in casing and the URL did not match the exact casing of a particular one.
*/
type GetTeamsUsernameMembersNotFound struct {
	Payload *models.Error
}

func (o *GetTeamsUsernameMembersNotFound) Error() string {
	return fmt.Sprintf("[GET /teams/{username}/members][%d] getTeamsUsernameMembersNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamsUsernameMembersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTeamsUsernameMembersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
