// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetTeamsUsernameReader is a Reader for the GetTeamsUsername structure.
type GetTeamsUsernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsUsernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsUsernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTeamsUsernameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTeamsUsernameOK creates a GetTeamsUsernameOK with default headers values
func NewGetTeamsUsernameOK() *GetTeamsUsernameOK {
	return &GetTeamsUsernameOK{}
}

/*GetTeamsUsernameOK handles this case with default header values.

The team object
*/
type GetTeamsUsernameOK struct {
	Payload *models.Team
}

func (o *GetTeamsUsernameOK) Error() string {
	return fmt.Sprintf("[GET /teams/{username}][%d] getTeamsUsernameOK  %+v", 200, o.Payload)
}

func (o *GetTeamsUsernameOK) GetPayload() *models.Team {
	return o.Payload
}

func (o *GetTeamsUsernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUsernameNotFound creates a GetTeamsUsernameNotFound with default headers values
func NewGetTeamsUsernameNotFound() *GetTeamsUsernameNotFound {
	return &GetTeamsUsernameNotFound{}
}

/*GetTeamsUsernameNotFound handles this case with default header values.

If no team exists for the specified name or UUID, or if the specified account is a personal account, not a team account.
*/
type GetTeamsUsernameNotFound struct {
	Payload *models.Error
}

func (o *GetTeamsUsernameNotFound) Error() string {
	return fmt.Sprintf("[GET /teams/{username}][%d] getTeamsUsernameNotFound  %+v", 404, o.Payload)
}

func (o *GetTeamsUsernameNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTeamsUsernameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
