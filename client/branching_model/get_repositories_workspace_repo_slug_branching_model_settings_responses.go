// Code generated by go-swagger; DO NOT EDIT.

package branching_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsReader is a Reader for the GetRepositoriesWorkspaceRepoSlugBranchingModelSettings structure.
type GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK creates a GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK() *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK {
	return &GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK handles this case with default header values.

The branching model configuration
*/
type GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK struct {
	Payload *models.BranchingModelSettings
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branching-model/settings][%d] getRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK  %+v", 200, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK) GetPayload() *models.BranchingModelSettings {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BranchingModelSettings)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized creates a GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized() *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized {
	return &GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized handles this case with default header values.

If the request was not authenticated
*/
type GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branching-model/settings][%d] getRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden creates a GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden() *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden {
	return &GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden handles this case with default header values.

If the authenticated user does not have admin access to the repository
*/
type GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branching-model/settings][%d] getRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden  %+v", 403, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound creates a GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound() *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound {
	return &GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound handles this case with default header values.

If the repository does not exist
*/
type GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branching-model/settings][%d] getRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound  %+v", 404, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchingModelSettingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
