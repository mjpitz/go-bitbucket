// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/client/addon"
	"github.com/mjpitz/go-bitbucket/client/branching_model"
	"github.com/mjpitz/go-bitbucket/client/branchrestrictions"
	"github.com/mjpitz/go-bitbucket/client/commits"
	"github.com/mjpitz/go-bitbucket/client/deploy"
	"github.com/mjpitz/go-bitbucket/client/deployments"
	"github.com/mjpitz/go-bitbucket/client/downloads"
	"github.com/mjpitz/go-bitbucket/client/issue_tracker"
	"github.com/mjpitz/go-bitbucket/client/pipelines"
	"github.com/mjpitz/go-bitbucket/client/projects"
	"github.com/mjpitz/go-bitbucket/client/properties"
	"github.com/mjpitz/go-bitbucket/client/pullrequests"
	"github.com/mjpitz/go-bitbucket/client/refs"
	"github.com/mjpitz/go-bitbucket/client/reports"
	"github.com/mjpitz/go-bitbucket/client/repositories"
	"github.com/mjpitz/go-bitbucket/client/search"
	"github.com/mjpitz/go-bitbucket/client/snippet"
	"github.com/mjpitz/go-bitbucket/client/snippets"
	"github.com/mjpitz/go-bitbucket/client/source"
	"github.com/mjpitz/go-bitbucket/client/ssh"
	"github.com/mjpitz/go-bitbucket/client/teams"
	"github.com/mjpitz/go-bitbucket/client/users"
	"github.com/mjpitz/go-bitbucket/client/webhooks"
	"github.com/mjpitz/go-bitbucket/client/workspaces"
)

// Default bitbucket API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.bitbucket.org"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/2.0"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new bitbucket API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *BitbucketAPI {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new bitbucket API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *BitbucketAPI {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new bitbucket API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *BitbucketAPI {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(BitbucketAPI)
	cli.Transport = transport
	cli.Addon = addon.New(transport, formats)
	cli.BranchingModel = branching_model.New(transport, formats)
	cli.Branchrestrictions = branchrestrictions.New(transport, formats)
	cli.Commits = commits.New(transport, formats)
	cli.Deploy = deploy.New(transport, formats)
	cli.Deployments = deployments.New(transport, formats)
	cli.Downloads = downloads.New(transport, formats)
	cli.IssueTracker = issue_tracker.New(transport, formats)
	cli.Operations = operations.New(transport, formats)
	cli.Pipelines = pipelines.New(transport, formats)
	cli.Projects = projects.New(transport, formats)
	cli.Properties = properties.New(transport, formats)
	cli.Pullrequests = pullrequests.New(transport, formats)
	cli.Refs = refs.New(transport, formats)
	cli.Reports = reports.New(transport, formats)
	cli.Repositories = repositories.New(transport, formats)
	cli.Search = search.New(transport, formats)
	cli.Snippet = snippet.New(transport, formats)
	cli.Snippets = snippets.New(transport, formats)
	cli.Source = source.New(transport, formats)
	cli.SSH = ssh.New(transport, formats)
	cli.Teams = teams.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.Webhooks = webhooks.New(transport, formats)
	cli.Workspaces = workspaces.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// BitbucketAPI is a client for bitbucket API
type BitbucketAPI struct {
	Addon addon.ClientService

	BranchingModel branching_model.ClientService

	Branchrestrictions branchrestrictions.ClientService

	Commits commits.ClientService

	Deploy deploy.ClientService

	Deployments deployments.ClientService

	Downloads downloads.ClientService

	IssueTracker issue_tracker.ClientService

	Operations operations.ClientService

	Pipelines pipelines.ClientService

	Projects projects.ClientService

	Properties properties.ClientService

	Pullrequests pullrequests.ClientService

	Refs refs.ClientService

	Reports reports.ClientService

	Repositories repositories.ClientService

	Search search.ClientService

	Snippet snippet.ClientService

	Snippets snippets.ClientService

	Source source.ClientService

	SSH ssh.ClientService

	Teams teams.ClientService

	Users users.ClientService

	Webhooks webhooks.ClientService

	Workspaces workspaces.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *BitbucketAPI) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Addon.SetTransport(transport)
	c.BranchingModel.SetTransport(transport)
	c.Branchrestrictions.SetTransport(transport)
	c.Commits.SetTransport(transport)
	c.Deploy.SetTransport(transport)
	c.Deployments.SetTransport(transport)
	c.Downloads.SetTransport(transport)
	c.IssueTracker.SetTransport(transport)
	c.Operations.SetTransport(transport)
	c.Pipelines.SetTransport(transport)
	c.Projects.SetTransport(transport)
	c.Properties.SetTransport(transport)
	c.Pullrequests.SetTransport(transport)
	c.Refs.SetTransport(transport)
	c.Reports.SetTransport(transport)
	c.Repositories.SetTransport(transport)
	c.Search.SetTransport(transport)
	c.Snippet.SetTransport(transport)
	c.Snippets.SetTransport(transport)
	c.Source.SetTransport(transport)
	c.SSH.SetTransport(transport)
	c.Teams.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.Webhooks.SetTransport(transport)
	c.Workspaces.SetTransport(transport)
}
