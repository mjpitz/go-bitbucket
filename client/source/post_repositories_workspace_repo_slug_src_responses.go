// Code generated by go-swagger; DO NOT EDIT.

package source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// PostRepositoriesWorkspaceRepoSlugSrcReader is a Reader for the PostRepositoriesWorkspaceRepoSlugSrc structure.
type PostRepositoriesWorkspaceRepoSlugSrcReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesWorkspaceRepoSlugSrcReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesWorkspaceRepoSlugSrcCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostRepositoriesWorkspaceRepoSlugSrcForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRepositoriesWorkspaceRepoSlugSrcNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRepositoriesWorkspaceRepoSlugSrcCreated creates a PostRepositoriesWorkspaceRepoSlugSrcCreated with default headers values
func NewPostRepositoriesWorkspaceRepoSlugSrcCreated() *PostRepositoriesWorkspaceRepoSlugSrcCreated {
	return &PostRepositoriesWorkspaceRepoSlugSrcCreated{}
}

/*PostRepositoriesWorkspaceRepoSlugSrcCreated handles this case with default header values.



 */
type PostRepositoriesWorkspaceRepoSlugSrcCreated struct {
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/src][%d] postRepositoriesWorkspaceRepoSlugSrcCreated ", 201)
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostRepositoriesWorkspaceRepoSlugSrcForbidden creates a PostRepositoriesWorkspaceRepoSlugSrcForbidden with default headers values
func NewPostRepositoriesWorkspaceRepoSlugSrcForbidden() *PostRepositoriesWorkspaceRepoSlugSrcForbidden {
	return &PostRepositoriesWorkspaceRepoSlugSrcForbidden{}
}

/*PostRepositoriesWorkspaceRepoSlugSrcForbidden handles this case with default header values.

If the authenticated user does not have write or admin access
*/
type PostRepositoriesWorkspaceRepoSlugSrcForbidden struct {
	Payload *models.Error
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcForbidden) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/src][%d] postRepositoriesWorkspaceRepoSlugSrcForbidden  %+v", 403, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRepositoriesWorkspaceRepoSlugSrcNotFound creates a PostRepositoriesWorkspaceRepoSlugSrcNotFound with default headers values
func NewPostRepositoriesWorkspaceRepoSlugSrcNotFound() *PostRepositoriesWorkspaceRepoSlugSrcNotFound {
	return &PostRepositoriesWorkspaceRepoSlugSrcNotFound{}
}

/*PostRepositoriesWorkspaceRepoSlugSrcNotFound handles this case with default header values.

If the repository does not exist.
*/
type PostRepositoriesWorkspaceRepoSlugSrcNotFound struct {
	Payload *models.Error
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcNotFound) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/src][%d] postRepositoriesWorkspaceRepoSlugSrcNotFound  %+v", 404, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugSrcNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
