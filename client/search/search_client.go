// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new search API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for search API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	SearchAccount(params *SearchAccountParams) (*SearchAccountOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  SearchAccount searches for code in the repositories of the specified workspace searching across all repositories curl https api bitbucket org 2 0 workspaces workspace slug or uuid search code search query foo size 1 page 1 pagelen 10 query substituted false values type code search result content match count 2 content matches lines line 2 segments line 3 segments text def text foo match true text line 4 segments text print snek line 5 segments path matches text src text foo match true text py file path src foo py type commit file links self href https api bitbucket org 2 0 repositories my workspace demo src ad6964b5fe2880dbd9ddcad1c89000f1dbcbc24b src foo py note that searches can match in the file s text content matches the path path matches or both as in the example above you can use the same syntax for the search query as in the UI e g to only search within a specific repository curl https api bitbucket org 2 0 workspaces my workspace search code search query foo repo demo results from the demo repository similar to other a p is you can request more fields using a fields query parameter e g to get some more information about the repository of matched files the 2 b is a URL encoded curl https api bitbucket org 2 0 workspaces my workspace search code search query foo and fields 2 bvalues file commit repository size 1 page 1 pagelen 10 query substituted false values type code search result content match count 1 content matches path matches file commit type commit hash ad6964b5fe2880dbd9ddcad1c89000f1dbcbc24b links self href https api bitbucket org 2 0 repositories my workspace demo commit ad6964b5fe2880dbd9ddcad1c89000f1dbcbc24b html href https bitbucket org my workspace demo commits ad6964b5fe2880dbd9ddcad1c89000f1dbcbc24b repository name demo type repository full name my workspace demo links self href https api bitbucket org 2 0 repositories my workspace demo html href https bitbucket org my workspace demo avatar href https bytebucket org ravatar 7 b850e1749 781a 4115 9316 df39d0600e7a 7 d ts default uuid 850e1749 781a 4115 9316 df39d0600e7a type commit file links self href https api bitbucket org 2 0 repositories my workspace demo src ad6964b5fe2880dbd9ddcad1c89000f1dbcbc24b src foo py path src foo py try fields 2 bvalues to get an idea what s possible
*/
func (a *Client) SearchAccount(params *SearchAccountParams) (*SearchAccountOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchAccountParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "searchAccount",
		Method:             "GET",
		PathPattern:        "/workspaces/{workspace}/search/code",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SearchAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SearchAccountOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for searchAccount: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
