// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetRepositoryPipelineScheduleExecutionsReader is a Reader for the GetRepositoryPipelineScheduleExecutions structure.
type GetRepositoryPipelineScheduleExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoryPipelineScheduleExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoryPipelineScheduleExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRepositoryPipelineScheduleExecutionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoryPipelineScheduleExecutionsOK creates a GetRepositoryPipelineScheduleExecutionsOK with default headers values
func NewGetRepositoryPipelineScheduleExecutionsOK() *GetRepositoryPipelineScheduleExecutionsOK {
	return &GetRepositoryPipelineScheduleExecutionsOK{}
}

/*GetRepositoryPipelineScheduleExecutionsOK handles this case with default header values.

The list of executions of a schedule.
*/
type GetRepositoryPipelineScheduleExecutionsOK struct {
	Payload *models.PaginatedPipelineScheduleExecutions
}

func (o *GetRepositoryPipelineScheduleExecutionsOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}/executions/][%d] getRepositoryPipelineScheduleExecutionsOK  %+v", 200, o.Payload)
}

func (o *GetRepositoryPipelineScheduleExecutionsOK) GetPayload() *models.PaginatedPipelineScheduleExecutions {
	return o.Payload
}

func (o *GetRepositoryPipelineScheduleExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedPipelineScheduleExecutions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoryPipelineScheduleExecutionsNotFound creates a GetRepositoryPipelineScheduleExecutionsNotFound with default headers values
func NewGetRepositoryPipelineScheduleExecutionsNotFound() *GetRepositoryPipelineScheduleExecutionsNotFound {
	return &GetRepositoryPipelineScheduleExecutionsNotFound{}
}

/*GetRepositoryPipelineScheduleExecutionsNotFound handles this case with default header values.

The account or repository was not found.
*/
type GetRepositoryPipelineScheduleExecutionsNotFound struct {
	Payload *models.Error
}

func (o *GetRepositoryPipelineScheduleExecutionsNotFound) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}/executions/][%d] getRepositoryPipelineScheduleExecutionsNotFound  %+v", 404, o.Payload)
}

func (o *GetRepositoryPipelineScheduleExecutionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoryPipelineScheduleExecutionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
