// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRepositoryPipelineKnownHostsParams creates a new GetRepositoryPipelineKnownHostsParams object
// with the default values initialized.
func NewGetRepositoryPipelineKnownHostsParams() *GetRepositoryPipelineKnownHostsParams {
	var ()
	return &GetRepositoryPipelineKnownHostsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRepositoryPipelineKnownHostsParamsWithTimeout creates a new GetRepositoryPipelineKnownHostsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRepositoryPipelineKnownHostsParamsWithTimeout(timeout time.Duration) *GetRepositoryPipelineKnownHostsParams {
	var ()
	return &GetRepositoryPipelineKnownHostsParams{

		timeout: timeout,
	}
}

// NewGetRepositoryPipelineKnownHostsParamsWithContext creates a new GetRepositoryPipelineKnownHostsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRepositoryPipelineKnownHostsParamsWithContext(ctx context.Context) *GetRepositoryPipelineKnownHostsParams {
	var ()
	return &GetRepositoryPipelineKnownHostsParams{

		Context: ctx,
	}
}

// NewGetRepositoryPipelineKnownHostsParamsWithHTTPClient creates a new GetRepositoryPipelineKnownHostsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRepositoryPipelineKnownHostsParamsWithHTTPClient(client *http.Client) *GetRepositoryPipelineKnownHostsParams {
	var ()
	return &GetRepositoryPipelineKnownHostsParams{
		HTTPClient: client,
	}
}

/*GetRepositoryPipelineKnownHostsParams contains all the parameters to send to the API endpoint
for the get repository pipeline known hosts operation typically these are written to a http.Request
*/
type GetRepositoryPipelineKnownHostsParams struct {

	/*RepoSlug
	  The repository.

	*/
	RepoSlug string
	/*Username
	  The account.

	*/
	Username string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) WithTimeout(timeout time.Duration) *GetRepositoryPipelineKnownHostsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) WithContext(ctx context.Context) *GetRepositoryPipelineKnownHostsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) WithHTTPClient(client *http.Client) *GetRepositoryPipelineKnownHostsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRepoSlug adds the repoSlug to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) WithRepoSlug(repoSlug string) *GetRepositoryPipelineKnownHostsParams {
	o.SetRepoSlug(repoSlug)
	return o
}

// SetRepoSlug adds the repoSlug to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) SetRepoSlug(repoSlug string) {
	o.RepoSlug = repoSlug
}

// WithUsername adds the username to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) WithUsername(username string) *GetRepositoryPipelineKnownHostsParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the get repository pipeline known hosts params
func (o *GetRepositoryPipelineKnownHostsParams) SetUsername(username string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *GetRepositoryPipelineKnownHostsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param repo_slug
	if err := r.SetPathParam("repo_slug", o.RepoSlug); err != nil {
		return err
	}

	// path param username
	if err := r.SetPathParam("username", o.Username); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
