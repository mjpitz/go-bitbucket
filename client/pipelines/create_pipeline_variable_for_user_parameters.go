// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// NewCreatePipelineVariableForUserParams creates a new CreatePipelineVariableForUserParams object
// with the default values initialized.
func NewCreatePipelineVariableForUserParams() *CreatePipelineVariableForUserParams {
	var ()
	return &CreatePipelineVariableForUserParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreatePipelineVariableForUserParamsWithTimeout creates a new CreatePipelineVariableForUserParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreatePipelineVariableForUserParamsWithTimeout(timeout time.Duration) *CreatePipelineVariableForUserParams {
	var ()
	return &CreatePipelineVariableForUserParams{

		timeout: timeout,
	}
}

// NewCreatePipelineVariableForUserParamsWithContext creates a new CreatePipelineVariableForUserParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreatePipelineVariableForUserParamsWithContext(ctx context.Context) *CreatePipelineVariableForUserParams {
	var ()
	return &CreatePipelineVariableForUserParams{

		Context: ctx,
	}
}

// NewCreatePipelineVariableForUserParamsWithHTTPClient creates a new CreatePipelineVariableForUserParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreatePipelineVariableForUserParamsWithHTTPClient(client *http.Client) *CreatePipelineVariableForUserParams {
	var ()
	return &CreatePipelineVariableForUserParams{
		HTTPClient: client,
	}
}

/*CreatePipelineVariableForUserParams contains all the parameters to send to the API endpoint
for the create pipeline variable for user operation typically these are written to a http.Request
*/
type CreatePipelineVariableForUserParams struct {

	/*Body
	  The variable to create.

	*/
	Body *models.PipelineVariable
	/*SelectedUser
	  Either the UUID of the account surrounded by curly-braces, for example `{account UUID}`, OR an Atlassian Account ID.

	*/
	SelectedUser string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) WithTimeout(timeout time.Duration) *CreatePipelineVariableForUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) WithContext(ctx context.Context) *CreatePipelineVariableForUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) WithHTTPClient(client *http.Client) *CreatePipelineVariableForUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) WithBody(body *models.PipelineVariable) *CreatePipelineVariableForUserParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) SetBody(body *models.PipelineVariable) {
	o.Body = body
}

// WithSelectedUser adds the selectedUser to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) WithSelectedUser(selectedUser string) *CreatePipelineVariableForUserParams {
	o.SetSelectedUser(selectedUser)
	return o
}

// SetSelectedUser adds the selectedUser to the create pipeline variable for user params
func (o *CreatePipelineVariableForUserParams) SetSelectedUser(selectedUser string) {
	o.SelectedUser = selectedUser
}

// WriteToRequest writes these params to a swagger request
func (o *CreatePipelineVariableForUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param selected_user
	if err := r.SetPathParam("selected_user", o.SelectedUser); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
