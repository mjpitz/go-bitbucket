// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetPipelineVariableForUserReader is a Reader for the GetPipelineVariableForUser structure.
type GetPipelineVariableForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPipelineVariableForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPipelineVariableForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPipelineVariableForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPipelineVariableForUserOK creates a GetPipelineVariableForUserOK with default headers values
func NewGetPipelineVariableForUserOK() *GetPipelineVariableForUserOK {
	return &GetPipelineVariableForUserOK{}
}

/*GetPipelineVariableForUserOK handles this case with default header values.

The variable.
*/
type GetPipelineVariableForUserOK struct {
	Payload *models.PipelineVariable
}

func (o *GetPipelineVariableForUserOK) Error() string {
	return fmt.Sprintf("[GET /users/{selected_user}/pipelines_config/variables/{variable_uuid}][%d] getPipelineVariableForUserOK  %+v", 200, o.Payload)
}

func (o *GetPipelineVariableForUserOK) GetPayload() *models.PipelineVariable {
	return o.Payload
}

func (o *GetPipelineVariableForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PipelineVariable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPipelineVariableForUserNotFound creates a GetPipelineVariableForUserNotFound with default headers values
func NewGetPipelineVariableForUserNotFound() *GetPipelineVariableForUserNotFound {
	return &GetPipelineVariableForUserNotFound{}
}

/*GetPipelineVariableForUserNotFound handles this case with default header values.

The account or variable with the given UUID was not found.
*/
type GetPipelineVariableForUserNotFound struct {
	Payload *models.Error
}

func (o *GetPipelineVariableForUserNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{selected_user}/pipelines_config/variables/{variable_uuid}][%d] getPipelineVariableForUserNotFound  %+v", 404, o.Payload)
}

func (o *GetPipelineVariableForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPipelineVariableForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
