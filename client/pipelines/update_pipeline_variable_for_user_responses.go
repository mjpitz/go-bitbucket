// Code generated by go-swagger; DO NOT EDIT.

package pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// UpdatePipelineVariableForUserReader is a Reader for the UpdatePipelineVariableForUser structure.
type UpdatePipelineVariableForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePipelineVariableForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePipelineVariableForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdatePipelineVariableForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePipelineVariableForUserOK creates a UpdatePipelineVariableForUserOK with default headers values
func NewUpdatePipelineVariableForUserOK() *UpdatePipelineVariableForUserOK {
	return &UpdatePipelineVariableForUserOK{}
}

/*UpdatePipelineVariableForUserOK handles this case with default header values.

The variable was updated.
*/
type UpdatePipelineVariableForUserOK struct {
	Payload *models.PipelineVariable
}

func (o *UpdatePipelineVariableForUserOK) Error() string {
	return fmt.Sprintf("[PUT /users/{selected_user}/pipelines_config/variables/{variable_uuid}][%d] updatePipelineVariableForUserOK  %+v", 200, o.Payload)
}

func (o *UpdatePipelineVariableForUserOK) GetPayload() *models.PipelineVariable {
	return o.Payload
}

func (o *UpdatePipelineVariableForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PipelineVariable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePipelineVariableForUserNotFound creates a UpdatePipelineVariableForUserNotFound with default headers values
func NewUpdatePipelineVariableForUserNotFound() *UpdatePipelineVariableForUserNotFound {
	return &UpdatePipelineVariableForUserNotFound{}
}

/*UpdatePipelineVariableForUserNotFound handles this case with default header values.

The account or the variable was not found.
*/
type UpdatePipelineVariableForUserNotFound struct {
	Payload *models.Error
}

func (o *UpdatePipelineVariableForUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{selected_user}/pipelines_config/variables/{variable_uuid}][%d] updatePipelineVariableForUserNotFound  %+v", 404, o.Payload)
}

func (o *UpdatePipelineVariableForUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePipelineVariableForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
