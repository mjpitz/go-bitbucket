// Code generated by go-swagger; DO NOT EDIT.

package snippets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetSnippetsWorkspaceEncodedIDReader is a Reader for the GetSnippetsWorkspaceEncodedID structure.
type GetSnippetsWorkspaceEncodedIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnippetsWorkspaceEncodedIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnippetsWorkspaceEncodedIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSnippetsWorkspaceEncodedIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSnippetsWorkspaceEncodedIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSnippetsWorkspaceEncodedIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetSnippetsWorkspaceEncodedIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnippetsWorkspaceEncodedIDOK creates a GetSnippetsWorkspaceEncodedIDOK with default headers values
func NewGetSnippetsWorkspaceEncodedIDOK() *GetSnippetsWorkspaceEncodedIDOK {
	return &GetSnippetsWorkspaceEncodedIDOK{}
}

/*GetSnippetsWorkspaceEncodedIDOK handles this case with default header values.

The snippet object.
*/
type GetSnippetsWorkspaceEncodedIDOK struct {
	Payload *models.Snippet
}

func (o *GetSnippetsWorkspaceEncodedIDOK) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}][%d] getSnippetsWorkspaceEncodedIdOK  %+v", 200, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDOK) GetPayload() *models.Snippet {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Snippet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDUnauthorized creates a GetSnippetsWorkspaceEncodedIDUnauthorized with default headers values
func NewGetSnippetsWorkspaceEncodedIDUnauthorized() *GetSnippetsWorkspaceEncodedIDUnauthorized {
	return &GetSnippetsWorkspaceEncodedIDUnauthorized{}
}

/*GetSnippetsWorkspaceEncodedIDUnauthorized handles this case with default header values.

If the snippet is private and the request was not authenticated.
*/
type GetSnippetsWorkspaceEncodedIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}][%d] getSnippetsWorkspaceEncodedIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDForbidden creates a GetSnippetsWorkspaceEncodedIDForbidden with default headers values
func NewGetSnippetsWorkspaceEncodedIDForbidden() *GetSnippetsWorkspaceEncodedIDForbidden {
	return &GetSnippetsWorkspaceEncodedIDForbidden{}
}

/*GetSnippetsWorkspaceEncodedIDForbidden handles this case with default header values.

If authenticated user does not have access to the private snippet.
*/
type GetSnippetsWorkspaceEncodedIDForbidden struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDForbidden) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}][%d] getSnippetsWorkspaceEncodedIdForbidden  %+v", 403, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDNotFound creates a GetSnippetsWorkspaceEncodedIDNotFound with default headers values
func NewGetSnippetsWorkspaceEncodedIDNotFound() *GetSnippetsWorkspaceEncodedIDNotFound {
	return &GetSnippetsWorkspaceEncodedIDNotFound{}
}

/*GetSnippetsWorkspaceEncodedIDNotFound handles this case with default header values.

If the snippet does not exist.
*/
type GetSnippetsWorkspaceEncodedIDNotFound struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDNotFound) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}][%d] getSnippetsWorkspaceEncodedIdNotFound  %+v", 404, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDGone creates a GetSnippetsWorkspaceEncodedIDGone with default headers values
func NewGetSnippetsWorkspaceEncodedIDGone() *GetSnippetsWorkspaceEncodedIDGone {
	return &GetSnippetsWorkspaceEncodedIDGone{}
}

/*GetSnippetsWorkspaceEncodedIDGone handles this case with default header values.

If the snippet marked as spam.
*/
type GetSnippetsWorkspaceEncodedIDGone struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDGone) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}][%d] getSnippetsWorkspaceEncodedIdGone  %+v", 410, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDGone) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
