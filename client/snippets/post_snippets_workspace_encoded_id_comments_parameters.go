// Code generated by go-swagger; DO NOT EDIT.

package snippets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// NewPostSnippetsWorkspaceEncodedIDCommentsParams creates a new PostSnippetsWorkspaceEncodedIDCommentsParams object
// with the default values initialized.
func NewPostSnippetsWorkspaceEncodedIDCommentsParams() *PostSnippetsWorkspaceEncodedIDCommentsParams {
	var ()
	return &PostSnippetsWorkspaceEncodedIDCommentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostSnippetsWorkspaceEncodedIDCommentsParamsWithTimeout creates a new PostSnippetsWorkspaceEncodedIDCommentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostSnippetsWorkspaceEncodedIDCommentsParamsWithTimeout(timeout time.Duration) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	var ()
	return &PostSnippetsWorkspaceEncodedIDCommentsParams{

		timeout: timeout,
	}
}

// NewPostSnippetsWorkspaceEncodedIDCommentsParamsWithContext creates a new PostSnippetsWorkspaceEncodedIDCommentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostSnippetsWorkspaceEncodedIDCommentsParamsWithContext(ctx context.Context) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	var ()
	return &PostSnippetsWorkspaceEncodedIDCommentsParams{

		Context: ctx,
	}
}

// NewPostSnippetsWorkspaceEncodedIDCommentsParamsWithHTTPClient creates a new PostSnippetsWorkspaceEncodedIDCommentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostSnippetsWorkspaceEncodedIDCommentsParamsWithHTTPClient(client *http.Client) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	var ()
	return &PostSnippetsWorkspaceEncodedIDCommentsParams{
		HTTPClient: client,
	}
}

/*PostSnippetsWorkspaceEncodedIDCommentsParams contains all the parameters to send to the API endpoint
for the post snippets workspace encoded ID comments operation typically these are written to a http.Request
*/
type PostSnippetsWorkspaceEncodedIDCommentsParams struct {

	/*Body
	  The contents of the new comment.

	*/
	Body *models.Snippet
	/*EncodedID*/
	EncodedID string
	/*Workspace
	  This can either be the workspace ID (slug) or the workspace UUID
	surrounded by curly-braces, for example: `{workspace UUID}`.


	*/
	Workspace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WithTimeout(timeout time.Duration) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WithContext(ctx context.Context) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WithHTTPClient(client *http.Client) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WithBody(body *models.Snippet) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) SetBody(body *models.Snippet) {
	o.Body = body
}

// WithEncodedID adds the encodedID to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WithEncodedID(encodedID string) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	o.SetEncodedID(encodedID)
	return o
}

// SetEncodedID adds the encodedId to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) SetEncodedID(encodedID string) {
	o.EncodedID = encodedID
}

// WithWorkspace adds the workspace to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WithWorkspace(workspace string) *PostSnippetsWorkspaceEncodedIDCommentsParams {
	o.SetWorkspace(workspace)
	return o
}

// SetWorkspace adds the workspace to the post snippets workspace encoded ID comments params
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) SetWorkspace(workspace string) {
	o.Workspace = workspace
}

// WriteToRequest writes these params to a swagger request
func (o *PostSnippetsWorkspaceEncodedIDCommentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param encoded_id
	if err := r.SetPathParam("encoded_id", o.EncodedID); err != nil {
		return err
	}

	// path param workspace
	if err := r.SetPathParam("workspace", o.Workspace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
