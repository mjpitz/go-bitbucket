// Code generated by go-swagger; DO NOT EDIT.

package snippets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetSnippetsWorkspaceEncodedIDRevisionPatchReader is a Reader for the GetSnippetsWorkspaceEncodedIDRevisionPatch structure.
type GetSnippetsWorkspaceEncodedIDRevisionPatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnippetsWorkspaceEncodedIDRevisionPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSnippetsWorkspaceEncodedIDRevisionPatchForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSnippetsWorkspaceEncodedIDRevisionPatchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnippetsWorkspaceEncodedIDRevisionPatchOK creates a GetSnippetsWorkspaceEncodedIDRevisionPatchOK with default headers values
func NewGetSnippetsWorkspaceEncodedIDRevisionPatchOK() *GetSnippetsWorkspaceEncodedIDRevisionPatchOK {
	return &GetSnippetsWorkspaceEncodedIDRevisionPatchOK{}
}

/*GetSnippetsWorkspaceEncodedIDRevisionPatchOK handles this case with default header values.

The raw patch contents.
*/
type GetSnippetsWorkspaceEncodedIDRevisionPatchOK struct {
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchOK) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}/{revision}/patch][%d] getSnippetsWorkspaceEncodedIdRevisionPatchOK ", 200)
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDRevisionPatchForbidden creates a GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden with default headers values
func NewGetSnippetsWorkspaceEncodedIDRevisionPatchForbidden() *GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden {
	return &GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden{}
}

/*GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden handles this case with default header values.

If the authenticated user does not have access to the snippet.
*/
type GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}/{revision}/patch][%d] getSnippetsWorkspaceEncodedIdRevisionPatchForbidden  %+v", 403, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDRevisionPatchNotFound creates a GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound with default headers values
func NewGetSnippetsWorkspaceEncodedIDRevisionPatchNotFound() *GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound {
	return &GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound{}
}

/*GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound handles this case with default header values.

If the snippet does not exist.
*/
type GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}/{revision}/patch][%d] getSnippetsWorkspaceEncodedIdRevisionPatchNotFound  %+v", 404, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDRevisionPatchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
