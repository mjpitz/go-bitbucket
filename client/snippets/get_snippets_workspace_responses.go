// Code generated by go-swagger; DO NOT EDIT.

package snippets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetSnippetsWorkspaceReader is a Reader for the GetSnippetsWorkspace structure.
type GetSnippetsWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnippetsWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSnippetsWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSnippetsWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnippetsWorkspaceOK creates a GetSnippetsWorkspaceOK with default headers values
func NewGetSnippetsWorkspaceOK() *GetSnippetsWorkspaceOK {
	return &GetSnippetsWorkspaceOK{}
}

/*GetSnippetsWorkspaceOK handles this case with default header values.

A paginated list of snippets.
*/
type GetSnippetsWorkspaceOK struct {
	Payload *models.PaginatedSnippets
}

func (o *GetSnippetsWorkspaceOK) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}][%d] getSnippetsWorkspaceOK  %+v", 200, o.Payload)
}

func (o *GetSnippetsWorkspaceOK) GetPayload() *models.PaginatedSnippets {
	return o.Payload
}

func (o *GetSnippetsWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedSnippets)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceNotFound creates a GetSnippetsWorkspaceNotFound with default headers values
func NewGetSnippetsWorkspaceNotFound() *GetSnippetsWorkspaceNotFound {
	return &GetSnippetsWorkspaceNotFound{}
}

/*GetSnippetsWorkspaceNotFound handles this case with default header values.

If the user does not exist.
*/
type GetSnippetsWorkspaceNotFound struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceNotFound) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}][%d] getSnippetsWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *GetSnippetsWorkspaceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
