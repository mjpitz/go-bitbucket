// Code generated by go-swagger; DO NOT EDIT.

package workspaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetWorkspacesWorkspaceReader is a Reader for the GetWorkspacesWorkspace structure.
type GetWorkspacesWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkspacesWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkspacesWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetWorkspacesWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetWorkspacesWorkspaceOK creates a GetWorkspacesWorkspaceOK with default headers values
func NewGetWorkspacesWorkspaceOK() *GetWorkspacesWorkspaceOK {
	return &GetWorkspacesWorkspaceOK{}
}

/*GetWorkspacesWorkspaceOK handles this case with default header values.

The workspace.
*/
type GetWorkspacesWorkspaceOK struct {
	Payload *models.Workspace
}

func (o *GetWorkspacesWorkspaceOK) Error() string {
	return fmt.Sprintf("[GET /workspaces/{workspace}][%d] getWorkspacesWorkspaceOK  %+v", 200, o.Payload)
}

func (o *GetWorkspacesWorkspaceOK) GetPayload() *models.Workspace {
	return o.Payload
}

func (o *GetWorkspacesWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Workspace)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspacesWorkspaceNotFound creates a GetWorkspacesWorkspaceNotFound with default headers values
func NewGetWorkspacesWorkspaceNotFound() *GetWorkspacesWorkspaceNotFound {
	return &GetWorkspacesWorkspaceNotFound{}
}

/*GetWorkspacesWorkspaceNotFound handles this case with default header values.

If no workspace exists for the specified name or UUID.
*/
type GetWorkspacesWorkspaceNotFound struct {
	Payload *models.Error
}

func (o *GetWorkspacesWorkspaceNotFound) Error() string {
	return fmt.Sprintf("[GET /workspaces/{workspace}][%d] getWorkspacesWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkspacesWorkspaceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspacesWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
