// Code generated by go-swagger; DO NOT EDIT.

package workspaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// PutWorkspacesWorkspaceHooksUIDReader is a Reader for the PutWorkspacesWorkspaceHooksUID structure.
type PutWorkspacesWorkspaceHooksUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutWorkspacesWorkspaceHooksUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutWorkspacesWorkspaceHooksUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPutWorkspacesWorkspaceHooksUIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutWorkspacesWorkspaceHooksUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutWorkspacesWorkspaceHooksUIDOK creates a PutWorkspacesWorkspaceHooksUIDOK with default headers values
func NewPutWorkspacesWorkspaceHooksUIDOK() *PutWorkspacesWorkspaceHooksUIDOK {
	return &PutWorkspacesWorkspaceHooksUIDOK{}
}

/*PutWorkspacesWorkspaceHooksUIDOK handles this case with default header values.

The webhook subscription object.
*/
type PutWorkspacesWorkspaceHooksUIDOK struct {
	Payload *models.WebhookSubscription
}

func (o *PutWorkspacesWorkspaceHooksUIDOK) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspace}/hooks/{uid}][%d] putWorkspacesWorkspaceHooksUidOK  %+v", 200, o.Payload)
}

func (o *PutWorkspacesWorkspaceHooksUIDOK) GetPayload() *models.WebhookSubscription {
	return o.Payload
}

func (o *PutWorkspacesWorkspaceHooksUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebhookSubscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWorkspacesWorkspaceHooksUIDForbidden creates a PutWorkspacesWorkspaceHooksUIDForbidden with default headers values
func NewPutWorkspacesWorkspaceHooksUIDForbidden() *PutWorkspacesWorkspaceHooksUIDForbidden {
	return &PutWorkspacesWorkspaceHooksUIDForbidden{}
}

/*PutWorkspacesWorkspaceHooksUIDForbidden handles this case with default header values.

If the authenticated user does not have permission to update the webhook.
*/
type PutWorkspacesWorkspaceHooksUIDForbidden struct {
	Payload *models.Error
}

func (o *PutWorkspacesWorkspaceHooksUIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspace}/hooks/{uid}][%d] putWorkspacesWorkspaceHooksUidForbidden  %+v", 403, o.Payload)
}

func (o *PutWorkspacesWorkspaceHooksUIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutWorkspacesWorkspaceHooksUIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutWorkspacesWorkspaceHooksUIDNotFound creates a PutWorkspacesWorkspaceHooksUIDNotFound with default headers values
func NewPutWorkspacesWorkspaceHooksUIDNotFound() *PutWorkspacesWorkspaceHooksUIDNotFound {
	return &PutWorkspacesWorkspaceHooksUIDNotFound{}
}

/*PutWorkspacesWorkspaceHooksUIDNotFound handles this case with default header values.

If the webhook or workspace does not exist.
*/
type PutWorkspacesWorkspaceHooksUIDNotFound struct {
	Payload *models.Error
}

func (o *PutWorkspacesWorkspaceHooksUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /workspaces/{workspace}/hooks/{uid}][%d] putWorkspacesWorkspaceHooksUidNotFound  %+v", 404, o.Payload)
}

func (o *PutWorkspacesWorkspaceHooksUIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PutWorkspacesWorkspaceHooksUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
