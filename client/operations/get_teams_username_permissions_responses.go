// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetTeamsUsernamePermissionsReader is a Reader for the GetTeamsUsernamePermissions structure.
type GetTeamsUsernamePermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsUsernamePermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsUsernamePermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetTeamsUsernamePermissionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTeamsUsernamePermissionsOK creates a GetTeamsUsernamePermissionsOK with default headers values
func NewGetTeamsUsernamePermissionsOK() *GetTeamsUsernamePermissionsOK {
	return &GetTeamsUsernamePermissionsOK{}
}

/*GetTeamsUsernamePermissionsOK handles this case with default header values.

Repositories owned by a team.
*/
type GetTeamsUsernamePermissionsOK struct {
	Payload *models.PaginatedTeamPermissions
}

func (o *GetTeamsUsernamePermissionsOK) Error() string {
	return fmt.Sprintf("[GET /teams/{username}/permissions][%d] getTeamsUsernamePermissionsOK  %+v", 200, o.Payload)
}

func (o *GetTeamsUsernamePermissionsOK) GetPayload() *models.PaginatedTeamPermissions {
	return o.Payload
}

func (o *GetTeamsUsernamePermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedTeamPermissions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUsernamePermissionsForbidden creates a GetTeamsUsernamePermissionsForbidden with default headers values
func NewGetTeamsUsernamePermissionsForbidden() *GetTeamsUsernamePermissionsForbidden {
	return &GetTeamsUsernamePermissionsForbidden{}
}

/*GetTeamsUsernamePermissionsForbidden handles this case with default header values.

The requesting user isn't an admin of the team.
*/
type GetTeamsUsernamePermissionsForbidden struct {
	Payload *models.Error
}

func (o *GetTeamsUsernamePermissionsForbidden) Error() string {
	return fmt.Sprintf("[GET /teams/{username}/permissions][%d] getTeamsUsernamePermissionsForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamsUsernamePermissionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTeamsUsernamePermissionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
