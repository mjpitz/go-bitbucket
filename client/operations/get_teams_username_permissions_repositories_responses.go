// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetTeamsUsernamePermissionsRepositoriesReader is a Reader for the GetTeamsUsernamePermissionsRepositories structure.
type GetTeamsUsernamePermissionsRepositoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsUsernamePermissionsRepositoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsUsernamePermissionsRepositoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetTeamsUsernamePermissionsRepositoriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTeamsUsernamePermissionsRepositoriesOK creates a GetTeamsUsernamePermissionsRepositoriesOK with default headers values
func NewGetTeamsUsernamePermissionsRepositoriesOK() *GetTeamsUsernamePermissionsRepositoriesOK {
	return &GetTeamsUsernamePermissionsRepositoriesOK{}
}

/*GetTeamsUsernamePermissionsRepositoriesOK handles this case with default header values.

List of team's repository permissions.
*/
type GetTeamsUsernamePermissionsRepositoriesOK struct {
	Payload *models.PaginatedRepositoryPermissions
}

func (o *GetTeamsUsernamePermissionsRepositoriesOK) Error() string {
	return fmt.Sprintf("[GET /teams/{username}/permissions/repositories][%d] getTeamsUsernamePermissionsRepositoriesOK  %+v", 200, o.Payload)
}

func (o *GetTeamsUsernamePermissionsRepositoriesOK) GetPayload() *models.PaginatedRepositoryPermissions {
	return o.Payload
}

func (o *GetTeamsUsernamePermissionsRepositoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedRepositoryPermissions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUsernamePermissionsRepositoriesForbidden creates a GetTeamsUsernamePermissionsRepositoriesForbidden with default headers values
func NewGetTeamsUsernamePermissionsRepositoriesForbidden() *GetTeamsUsernamePermissionsRepositoriesForbidden {
	return &GetTeamsUsernamePermissionsRepositoriesForbidden{}
}

/*GetTeamsUsernamePermissionsRepositoriesForbidden handles this case with default header values.

The requesting user isn't an admin of the team.
*/
type GetTeamsUsernamePermissionsRepositoriesForbidden struct {
	Payload *models.Error
}

func (o *GetTeamsUsernamePermissionsRepositoriesForbidden) Error() string {
	return fmt.Sprintf("[GET /teams/{username}/permissions/repositories][%d] getTeamsUsernamePermissionsRepositoriesForbidden  %+v", 403, o.Payload)
}

func (o *GetTeamsUsernamePermissionsRepositoriesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTeamsUsernamePermissionsRepositoriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
