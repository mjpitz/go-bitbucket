// Code generated by go-swagger; DO NOT EDIT.

package refs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// PostRepositoriesWorkspaceRepoSlugRefsBranchesReader is a Reader for the PostRepositoriesWorkspaceRepoSlugRefsBranches structure.
type PostRepositoriesWorkspaceRepoSlugRefsBranchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesWorkspaceRepoSlugRefsBranchesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRepositoriesWorkspaceRepoSlugRefsBranchesCreated creates a PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated with default headers values
func NewPostRepositoriesWorkspaceRepoSlugRefsBranchesCreated() *PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated {
	return &PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated{}
}

/*PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated handles this case with default header values.

The newly created branch object.
*/
type PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated struct {
	Payload *models.Branch
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/refs/branches][%d] postRepositoriesWorkspaceRepoSlugRefsBranchesCreated  %+v", 201, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated) GetPayload() *models.Branch {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Branch)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden creates a PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden with default headers values
func NewPostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden() *PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden {
	return &PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden{}
}

/*PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden handles this case with default header values.

If the repository is private and the authenticated user does not have
access to it.

*/
type PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden struct {
	Payload *models.Error
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/refs/branches][%d] postRepositoriesWorkspaceRepoSlugRefsBranchesForbidden  %+v", 403, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound creates a PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound with default headers values
func NewPostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound() *PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound {
	return &PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound{}
}

/*PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound handles this case with default header values.

The specified repository or branch does not exist.
*/
type PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound struct {
	Payload *models.Error
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/refs/branches][%d] postRepositoriesWorkspaceRepoSlugRefsBranchesNotFound  %+v", 404, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugRefsBranchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
