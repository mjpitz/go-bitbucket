// Code generated by go-swagger; DO NOT EDIT.

package properties

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new properties API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for properties API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteCommitHostedPropertyValue(params *DeleteCommitHostedPropertyValueParams) (*DeleteCommitHostedPropertyValueNoContent, error)

	DeletePullRequestHostedPropertyValue(params *DeletePullRequestHostedPropertyValueParams) (*DeletePullRequestHostedPropertyValueNoContent, error)

	DeleteRepositoryHostedPropertyValue(params *DeleteRepositoryHostedPropertyValueParams) (*DeleteRepositoryHostedPropertyValueNoContent, error)

	DeleteUserHostedPropertyValue(params *DeleteUserHostedPropertyValueParams) (*DeleteUserHostedPropertyValueNoContent, error)

	GetCommitHostedPropertyValue(params *GetCommitHostedPropertyValueParams) (*GetCommitHostedPropertyValueOK, error)

	GetPullRequestHostedPropertyValue(params *GetPullRequestHostedPropertyValueParams) (*GetPullRequestHostedPropertyValueOK, error)

	GetRepositoryHostedPropertyValue(params *GetRepositoryHostedPropertyValueParams) (*GetRepositoryHostedPropertyValueOK, error)

	RetrieveUserHostedPropertyValue(params *RetrieveUserHostedPropertyValueParams) (*RetrieveUserHostedPropertyValueOK, error)

	UpdateCommitHostedPropertyValue(params *UpdateCommitHostedPropertyValueParams) (*UpdateCommitHostedPropertyValueNoContent, error)

	UpdatePullRequestHostedPropertyValue(params *UpdatePullRequestHostedPropertyValueParams) (*UpdatePullRequestHostedPropertyValueNoContent, error)

	UpdateRepositoryHostedPropertyValue(params *UpdateRepositoryHostedPropertyValueParams) (*UpdateRepositoryHostedPropertyValueNoContent, error)

	UpdateUserHostedPropertyValue(params *UpdateUserHostedPropertyValueParams) (*UpdateUserHostedPropertyValueNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteCommitHostedPropertyValue Delete an application property value stored against a commit.
*/
func (a *Client) DeleteCommitHostedPropertyValue(params *DeleteCommitHostedPropertyValueParams) (*DeleteCommitHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteCommitHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteCommitHostedPropertyValue",
		Method:             "DELETE",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteCommitHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteCommitHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteCommitHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeletePullRequestHostedPropertyValue Delete an application property value stored against a pull request.
*/
func (a *Client) DeletePullRequestHostedPropertyValue(params *DeletePullRequestHostedPropertyValueParams) (*DeletePullRequestHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletePullRequestHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deletePullRequestHostedPropertyValue",
		Method:             "DELETE",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeletePullRequestHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeletePullRequestHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deletePullRequestHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteRepositoryHostedPropertyValue Delete an application property value stored against a repository.
*/
func (a *Client) DeleteRepositoryHostedPropertyValue(params *DeleteRepositoryHostedPropertyValueParams) (*DeleteRepositoryHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteRepositoryHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteRepositoryHostedPropertyValue",
		Method:             "DELETE",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteRepositoryHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteRepositoryHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteRepositoryHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteUserHostedPropertyValue Delete an application property value stored against a user.
*/
func (a *Client) DeleteUserHostedPropertyValue(params *DeleteUserHostedPropertyValueParams) (*DeleteUserHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteUserHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteUserHostedPropertyValue",
		Method:             "DELETE",
		PathPattern:        "/users/{selected_user}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteUserHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteUserHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteUserHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetCommitHostedPropertyValue Retrieve an application property value stored against a commit.
*/
func (a *Client) GetCommitHostedPropertyValue(params *GetCommitHostedPropertyValueParams) (*GetCommitHostedPropertyValueOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetCommitHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getCommitHostedPropertyValue",
		Method:             "GET",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetCommitHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetCommitHostedPropertyValueOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getCommitHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetPullRequestHostedPropertyValue Retrieve an application property value stored against a pull request.
*/
func (a *Client) GetPullRequestHostedPropertyValue(params *GetPullRequestHostedPropertyValueParams) (*GetPullRequestHostedPropertyValueOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPullRequestHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getPullRequestHostedPropertyValue",
		Method:             "GET",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetPullRequestHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPullRequestHostedPropertyValueOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPullRequestHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRepositoryHostedPropertyValue Retrieve an application property value stored against a repository.
*/
func (a *Client) GetRepositoryHostedPropertyValue(params *GetRepositoryHostedPropertyValueParams) (*GetRepositoryHostedPropertyValueOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRepositoryHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRepositoryHostedPropertyValue",
		Method:             "GET",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetRepositoryHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRepositoryHostedPropertyValueOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRepositoryHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  RetrieveUserHostedPropertyValue Retrieve an application property value stored against a user.
*/
func (a *Client) RetrieveUserHostedPropertyValue(params *RetrieveUserHostedPropertyValueParams) (*RetrieveUserHostedPropertyValueOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRetrieveUserHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "retrieveUserHostedPropertyValue",
		Method:             "GET",
		PathPattern:        "/users/{selected_user}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RetrieveUserHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RetrieveUserHostedPropertyValueOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for retrieveUserHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateCommitHostedPropertyValue Update an application property value stored against a commit.
*/
func (a *Client) UpdateCommitHostedPropertyValue(params *UpdateCommitHostedPropertyValueParams) (*UpdateCommitHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateCommitHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateCommitHostedPropertyValue",
		Method:             "PUT",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateCommitHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateCommitHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateCommitHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdatePullRequestHostedPropertyValue Update an application property value stored against a pull request.
*/
func (a *Client) UpdatePullRequestHostedPropertyValue(params *UpdatePullRequestHostedPropertyValueParams) (*UpdatePullRequestHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdatePullRequestHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updatePullRequestHostedPropertyValue",
		Method:             "PUT",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdatePullRequestHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdatePullRequestHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updatePullRequestHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateRepositoryHostedPropertyValue Update an application property value stored against a repository.
*/
func (a *Client) UpdateRepositoryHostedPropertyValue(params *UpdateRepositoryHostedPropertyValueParams) (*UpdateRepositoryHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateRepositoryHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateRepositoryHostedPropertyValue",
		Method:             "PUT",
		PathPattern:        "/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateRepositoryHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateRepositoryHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateRepositoryHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateUserHostedPropertyValue Update an application property value stored against a user.
*/
func (a *Client) UpdateUserHostedPropertyValue(params *UpdateUserHostedPropertyValueParams) (*UpdateUserHostedPropertyValueNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateUserHostedPropertyValueParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateUserHostedPropertyValue",
		Method:             "PUT",
		PathPattern:        "/users/{selected_user}/properties/{app_key}/{property_name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateUserHostedPropertyValueReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateUserHostedPropertyValueNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateUserHostedPropertyValue: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
