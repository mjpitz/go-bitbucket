// Code generated by go-swagger; DO NOT EDIT.

package properties

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateUserHostedPropertyValueParams creates a new UpdateUserHostedPropertyValueParams object
// with the default values initialized.
func NewUpdateUserHostedPropertyValueParams() *UpdateUserHostedPropertyValueParams {
	var ()
	return &UpdateUserHostedPropertyValueParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateUserHostedPropertyValueParamsWithTimeout creates a new UpdateUserHostedPropertyValueParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateUserHostedPropertyValueParamsWithTimeout(timeout time.Duration) *UpdateUserHostedPropertyValueParams {
	var ()
	return &UpdateUserHostedPropertyValueParams{

		timeout: timeout,
	}
}

// NewUpdateUserHostedPropertyValueParamsWithContext creates a new UpdateUserHostedPropertyValueParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateUserHostedPropertyValueParamsWithContext(ctx context.Context) *UpdateUserHostedPropertyValueParams {
	var ()
	return &UpdateUserHostedPropertyValueParams{

		Context: ctx,
	}
}

// NewUpdateUserHostedPropertyValueParamsWithHTTPClient creates a new UpdateUserHostedPropertyValueParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateUserHostedPropertyValueParamsWithHTTPClient(client *http.Client) *UpdateUserHostedPropertyValueParams {
	var ()
	return &UpdateUserHostedPropertyValueParams{
		HTTPClient: client,
	}
}

/*UpdateUserHostedPropertyValueParams contains all the parameters to send to the API endpoint
for the update user hosted property value operation typically these are written to a http.Request
*/
type UpdateUserHostedPropertyValueParams struct {

	/*AppKey
	  The key of the Connect app.

	*/
	AppKey string
	/*PropertyName
	  The name of the property.

	*/
	PropertyName string
	/*SelectedUser
	  Either the UUID of the account surrounded by curly-braces, for example `{account UUID}`, OR an Atlassian Account ID.

	*/
	SelectedUser string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) WithTimeout(timeout time.Duration) *UpdateUserHostedPropertyValueParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) WithContext(ctx context.Context) *UpdateUserHostedPropertyValueParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) WithHTTPClient(client *http.Client) *UpdateUserHostedPropertyValueParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppKey adds the appKey to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) WithAppKey(appKey string) *UpdateUserHostedPropertyValueParams {
	o.SetAppKey(appKey)
	return o
}

// SetAppKey adds the appKey to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) SetAppKey(appKey string) {
	o.AppKey = appKey
}

// WithPropertyName adds the propertyName to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) WithPropertyName(propertyName string) *UpdateUserHostedPropertyValueParams {
	o.SetPropertyName(propertyName)
	return o
}

// SetPropertyName adds the propertyName to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) SetPropertyName(propertyName string) {
	o.PropertyName = propertyName
}

// WithSelectedUser adds the selectedUser to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) WithSelectedUser(selectedUser string) *UpdateUserHostedPropertyValueParams {
	o.SetSelectedUser(selectedUser)
	return o
}

// SetSelectedUser adds the selectedUser to the update user hosted property value params
func (o *UpdateUserHostedPropertyValueParams) SetSelectedUser(selectedUser string) {
	o.SelectedUser = selectedUser
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateUserHostedPropertyValueParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app_key
	if err := r.SetPathParam("app_key", o.AppKey); err != nil {
		return err
	}

	// path param property_name
	if err := r.SetPathParam("property_name", o.PropertyName); err != nil {
		return err
	}

	// path param selected_user
	if err := r.SetPathParam("selected_user", o.SelectedUser); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
