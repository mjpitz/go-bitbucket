// Code generated by go-swagger; DO NOT EDIT.

package downloads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetRepositoriesWorkspaceRepoSlugDownloadsReader is a Reader for the GetRepositoriesWorkspaceRepoSlugDownloads structure.
type GetRepositoriesWorkspaceRepoSlugDownloadsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesWorkspaceRepoSlugDownloadsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	result := NewGetRepositoriesWorkspaceRepoSlugDownloadsDefault(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result
}

// NewGetRepositoriesWorkspaceRepoSlugDownloadsDefault creates a GetRepositoriesWorkspaceRepoSlugDownloadsDefault with default headers values
func NewGetRepositoriesWorkspaceRepoSlugDownloadsDefault(code int) *GetRepositoriesWorkspaceRepoSlugDownloadsDefault {
	return &GetRepositoriesWorkspaceRepoSlugDownloadsDefault{
		_statusCode: code,
	}
}

/*GetRepositoriesWorkspaceRepoSlugDownloadsDefault handles this case with default header values.

Unexpected error.
*/
type GetRepositoriesWorkspaceRepoSlugDownloadsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get repositories workspace repo slug downloads default response
func (o *GetRepositoriesWorkspaceRepoSlugDownloadsDefault) Code() int {
	return o._statusCode
}

func (o *GetRepositoriesWorkspaceRepoSlugDownloadsDefault) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/downloads][%d] GetRepositoriesWorkspaceRepoSlugDownloads default  %+v", o._statusCode, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugDownloadsDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugDownloadsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
