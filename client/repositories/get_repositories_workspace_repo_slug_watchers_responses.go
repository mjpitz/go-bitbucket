// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetRepositoriesWorkspaceRepoSlugWatchersReader is a Reader for the GetRepositoriesWorkspaceRepoSlugWatchers structure.
type GetRepositoriesWorkspaceRepoSlugWatchersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesWorkspaceRepoSlugWatchersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesWorkspaceRepoSlugWatchersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoriesWorkspaceRepoSlugWatchersOK creates a GetRepositoriesWorkspaceRepoSlugWatchersOK with default headers values
func NewGetRepositoriesWorkspaceRepoSlugWatchersOK() *GetRepositoriesWorkspaceRepoSlugWatchersOK {
	return &GetRepositoriesWorkspaceRepoSlugWatchersOK{}
}

/*GetRepositoriesWorkspaceRepoSlugWatchersOK handles this case with default header values.

A paginated list of all the watchers on the specified repository.
*/
type GetRepositoriesWorkspaceRepoSlugWatchersOK struct {
}

func (o *GetRepositoriesWorkspaceRepoSlugWatchersOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/watchers][%d] getRepositoriesWorkspaceRepoSlugWatchersOK ", 200)
}

func (o *GetRepositoriesWorkspaceRepoSlugWatchersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
