// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetRepositoriesWorkspaceReader is a Reader for the GetRepositoriesWorkspace structure.
type GetRepositoriesWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetRepositoriesWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetRepositoriesWorkspaceGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoriesWorkspaceOK creates a GetRepositoriesWorkspaceOK with default headers values
func NewGetRepositoriesWorkspaceOK() *GetRepositoriesWorkspaceOK {
	return &GetRepositoriesWorkspaceOK{}
}

/*GetRepositoriesWorkspaceOK handles this case with default header values.

The repositories owned by the specified account.
*/
type GetRepositoriesWorkspaceOK struct {
	Payload *models.PaginatedRepositories
}

func (o *GetRepositoriesWorkspaceOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}][%d] getRepositoriesWorkspaceOK  %+v", 200, o.Payload)
}

func (o *GetRepositoriesWorkspaceOK) GetPayload() *models.PaginatedRepositories {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedRepositories)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceNotFound creates a GetRepositoriesWorkspaceNotFound with default headers values
func NewGetRepositoriesWorkspaceNotFound() *GetRepositoriesWorkspaceNotFound {
	return &GetRepositoriesWorkspaceNotFound{}
}

/*GetRepositoriesWorkspaceNotFound handles this case with default header values.

If the specified account does not exist.
*/
type GetRepositoriesWorkspaceNotFound struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceNotFound) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}][%d] getRepositoriesWorkspaceNotFound  %+v", 404, o.Payload)
}

func (o *GetRepositoriesWorkspaceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceGone creates a GetRepositoriesWorkspaceGone with default headers values
func NewGetRepositoriesWorkspaceGone() *GetRepositoriesWorkspaceGone {
	return &GetRepositoriesWorkspaceGone{}
}

/*GetRepositoriesWorkspaceGone handles this case with default header values.

If the specified account marked as spam.
*/
type GetRepositoriesWorkspaceGone struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceGone) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}][%d] getRepositoriesWorkspaceGone  %+v", 410, o.Payload)
}

func (o *GetRepositoriesWorkspaceGone) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
