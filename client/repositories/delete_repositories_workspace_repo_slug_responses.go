// Code generated by go-swagger; DO NOT EDIT.

package repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// DeleteRepositoriesWorkspaceRepoSlugReader is a Reader for the DeleteRepositoriesWorkspaceRepoSlug structure.
type DeleteRepositoriesWorkspaceRepoSlugReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRepositoriesWorkspaceRepoSlugReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRepositoriesWorkspaceRepoSlugNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteRepositoriesWorkspaceRepoSlugForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRepositoriesWorkspaceRepoSlugNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRepositoriesWorkspaceRepoSlugNoContent creates a DeleteRepositoriesWorkspaceRepoSlugNoContent with default headers values
func NewDeleteRepositoriesWorkspaceRepoSlugNoContent() *DeleteRepositoriesWorkspaceRepoSlugNoContent {
	return &DeleteRepositoriesWorkspaceRepoSlugNoContent{}
}

/*DeleteRepositoriesWorkspaceRepoSlugNoContent handles this case with default header values.

Indicates successful deletion.
*/
type DeleteRepositoriesWorkspaceRepoSlugNoContent struct {
}

func (o *DeleteRepositoriesWorkspaceRepoSlugNoContent) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{workspace}/{repo_slug}][%d] deleteRepositoriesWorkspaceRepoSlugNoContent ", 204)
}

func (o *DeleteRepositoriesWorkspaceRepoSlugNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRepositoriesWorkspaceRepoSlugForbidden creates a DeleteRepositoriesWorkspaceRepoSlugForbidden with default headers values
func NewDeleteRepositoriesWorkspaceRepoSlugForbidden() *DeleteRepositoriesWorkspaceRepoSlugForbidden {
	return &DeleteRepositoriesWorkspaceRepoSlugForbidden{}
}

/*DeleteRepositoriesWorkspaceRepoSlugForbidden handles this case with default header values.

If the caller either does not have admin access to the repository, or the repository is set to read-only.
*/
type DeleteRepositoriesWorkspaceRepoSlugForbidden struct {
	Payload *models.Error
}

func (o *DeleteRepositoriesWorkspaceRepoSlugForbidden) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{workspace}/{repo_slug}][%d] deleteRepositoriesWorkspaceRepoSlugForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRepositoriesWorkspaceRepoSlugForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRepositoriesWorkspaceRepoSlugForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRepositoriesWorkspaceRepoSlugNotFound creates a DeleteRepositoriesWorkspaceRepoSlugNotFound with default headers values
func NewDeleteRepositoriesWorkspaceRepoSlugNotFound() *DeleteRepositoriesWorkspaceRepoSlugNotFound {
	return &DeleteRepositoriesWorkspaceRepoSlugNotFound{}
}

/*DeleteRepositoriesWorkspaceRepoSlugNotFound handles this case with default header values.

If the repository does not exist.
*/
type DeleteRepositoriesWorkspaceRepoSlugNotFound struct {
	Payload *models.Error
}

func (o *DeleteRepositoriesWorkspaceRepoSlugNotFound) Error() string {
	return fmt.Sprintf("[DELETE /repositories/{workspace}/{repo_slug}][%d] deleteRepositoriesWorkspaceRepoSlugNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRepositoriesWorkspaceRepoSlugNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRepositoriesWorkspaceRepoSlugNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
