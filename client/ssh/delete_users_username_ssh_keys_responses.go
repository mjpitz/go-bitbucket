// Code generated by go-swagger; DO NOT EDIT.

package ssh

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// DeleteUsersUsernameSSHKeysReader is a Reader for the DeleteUsersUsernameSSHKeys structure.
type DeleteUsersUsernameSSHKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUsersUsernameSSHKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteUsersUsernameSSHKeysNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUsersUsernameSSHKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUsersUsernameSSHKeysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUsersUsernameSSHKeysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUsersUsernameSSHKeysNoContent creates a DeleteUsersUsernameSSHKeysNoContent with default headers values
func NewDeleteUsersUsernameSSHKeysNoContent() *DeleteUsersUsernameSSHKeysNoContent {
	return &DeleteUsersUsernameSSHKeysNoContent{}
}

/*DeleteUsersUsernameSSHKeysNoContent handles this case with default header values.

The key has been deleted
*/
type DeleteUsersUsernameSSHKeysNoContent struct {
}

func (o *DeleteUsersUsernameSSHKeysNoContent) Error() string {
	return fmt.Sprintf("[DELETE /users/{username}/ssh-keys/][%d] deleteUsersUsernameSshKeysNoContent ", 204)
}

func (o *DeleteUsersUsernameSSHKeysNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersUsernameSSHKeysBadRequest creates a DeleteUsersUsernameSSHKeysBadRequest with default headers values
func NewDeleteUsersUsernameSSHKeysBadRequest() *DeleteUsersUsernameSSHKeysBadRequest {
	return &DeleteUsersUsernameSSHKeysBadRequest{}
}

/*DeleteUsersUsernameSSHKeysBadRequest handles this case with default header values.

If the submitted key or related value is invalid
*/
type DeleteUsersUsernameSSHKeysBadRequest struct {
	Payload *models.Error
}

func (o *DeleteUsersUsernameSSHKeysBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /users/{username}/ssh-keys/][%d] deleteUsersUsernameSshKeysBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUsersUsernameSSHKeysBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteUsersUsernameSSHKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUsersUsernameSSHKeysForbidden creates a DeleteUsersUsernameSSHKeysForbidden with default headers values
func NewDeleteUsersUsernameSSHKeysForbidden() *DeleteUsersUsernameSSHKeysForbidden {
	return &DeleteUsersUsernameSSHKeysForbidden{}
}

/*DeleteUsersUsernameSSHKeysForbidden handles this case with default header values.

If the current user does not have permission to add a key for the specified user
*/
type DeleteUsersUsernameSSHKeysForbidden struct {
}

func (o *DeleteUsersUsernameSSHKeysForbidden) Error() string {
	return fmt.Sprintf("[DELETE /users/{username}/ssh-keys/][%d] deleteUsersUsernameSshKeysForbidden ", 403)
}

func (o *DeleteUsersUsernameSSHKeysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUsersUsernameSSHKeysNotFound creates a DeleteUsersUsernameSSHKeysNotFound with default headers values
func NewDeleteUsersUsernameSSHKeysNotFound() *DeleteUsersUsernameSSHKeysNotFound {
	return &DeleteUsersUsernameSSHKeysNotFound{}
}

/*DeleteUsersUsernameSSHKeysNotFound handles this case with default header values.

If the specified user does not exist
*/
type DeleteUsersUsernameSSHKeysNotFound struct {
	Payload *models.Error
}

func (o *DeleteUsersUsernameSSHKeysNotFound) Error() string {
	return fmt.Sprintf("[DELETE /users/{username}/ssh-keys/][%d] deleteUsersUsernameSshKeysNotFound  %+v", 404, o.Payload)
}

func (o *DeleteUsersUsernameSSHKeysNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteUsersUsernameSSHKeysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
