// Code generated by go-swagger; DO NOT EDIT.

package commits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetRepositoriesWorkspaceRepoSlugDiffSpecReader is a Reader for the GetRepositoriesWorkspaceRepoSlugDiffSpec structure.
type GetRepositoriesWorkspaceRepoSlugDiffSpecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesWorkspaceRepoSlugDiffSpecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesWorkspaceRepoSlugDiffSpecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 555:
		result := NewGetRepositoriesWorkspaceRepoSlugDiffSpecStatus555()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoriesWorkspaceRepoSlugDiffSpecOK creates a GetRepositoriesWorkspaceRepoSlugDiffSpecOK with default headers values
func NewGetRepositoriesWorkspaceRepoSlugDiffSpecOK() *GetRepositoriesWorkspaceRepoSlugDiffSpecOK {
	return &GetRepositoriesWorkspaceRepoSlugDiffSpecOK{}
}

/*GetRepositoriesWorkspaceRepoSlugDiffSpecOK handles this case with default header values.

The raw diff
*/
type GetRepositoriesWorkspaceRepoSlugDiffSpecOK struct {
}

func (o *GetRepositoriesWorkspaceRepoSlugDiffSpecOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/diff/{spec}][%d] getRepositoriesWorkspaceRepoSlugDiffSpecOK ", 200)
}

func (o *GetRepositoriesWorkspaceRepoSlugDiffSpecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugDiffSpecStatus555 creates a GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555 with default headers values
func NewGetRepositoriesWorkspaceRepoSlugDiffSpecStatus555() *GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555 {
	return &GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555{}
}

/*GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555 handles this case with default header values.

If the diff was too large and timed out.

Since this endpoint does not employ any form of pagination, but
instead returns the diff as a single document, it can run into
trouble on very large diffs. If Bitbucket times out in cases
like these, a 555 status code is returned.
*/
type GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555 struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/diff/{spec}][%d] getRepositoriesWorkspaceRepoSlugDiffSpecStatus555  %+v", 555, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugDiffSpecStatus555) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
