// Code generated by go-swagger; DO NOT EDIT.

package pullrequests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams creates a new DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams object
// with the default values initialized.
func NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams() *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	var ()
	return &DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParamsWithTimeout creates a new DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParamsWithTimeout(timeout time.Duration) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	var ()
	return &DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams{

		timeout: timeout,
	}
}

// NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParamsWithContext creates a new DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParamsWithContext(ctx context.Context) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	var ()
	return &DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams{

		Context: ctx,
	}
}

// NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParamsWithHTTPClient creates a new DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParamsWithHTTPClient(client *http.Client) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	var ()
	return &DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams{
		HTTPClient: client,
	}
}

/*DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams contains all the parameters to send to the API endpoint
for the delete repositories workspace repo slug pullrequests pull request ID comments comment ID operation typically these are written to a http.Request
*/
type DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams struct {

	/*CommentID*/
	CommentID string
	/*PullRequestID
	  The id of the pull request.

	*/
	PullRequestID int64
	/*RepoSlug
	  This can either be the repository slug or the UUID of the repository,
	surrounded by curly-braces, for example: `{repository UUID}`.


	*/
	RepoSlug string
	/*Workspace
	  This can either be the workspace ID (slug) or the workspace UUID
	surrounded by curly-braces, for example: `{workspace UUID}`.


	*/
	Workspace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithTimeout(timeout time.Duration) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithContext(ctx context.Context) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithHTTPClient(client *http.Client) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCommentID adds the commentID to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithCommentID(commentID string) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetCommentID(commentID)
	return o
}

// SetCommentID adds the commentId to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetCommentID(commentID string) {
	o.CommentID = commentID
}

// WithPullRequestID adds the pullRequestID to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithPullRequestID(pullRequestID int64) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetPullRequestID(pullRequestID)
	return o
}

// SetPullRequestID adds the pullRequestId to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetPullRequestID(pullRequestID int64) {
	o.PullRequestID = pullRequestID
}

// WithRepoSlug adds the repoSlug to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithRepoSlug(repoSlug string) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetRepoSlug(repoSlug)
	return o
}

// SetRepoSlug adds the repoSlug to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetRepoSlug(repoSlug string) {
	o.RepoSlug = repoSlug
}

// WithWorkspace adds the workspace to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WithWorkspace(workspace string) *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams {
	o.SetWorkspace(workspace)
	return o
}

// SetWorkspace adds the workspace to the delete repositories workspace repo slug pullrequests pull request ID comments comment ID params
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) SetWorkspace(workspace string) {
	o.Workspace = workspace
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRepositoriesWorkspaceRepoSlugPullrequestsPullRequestIDCommentsCommentIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param comment_id
	if err := r.SetPathParam("comment_id", o.CommentID); err != nil {
		return err
	}

	// path param pull_request_id
	if err := r.SetPathParam("pull_request_id", swag.FormatInt64(o.PullRequestID)); err != nil {
		return err
	}

	// path param repo_slug
	if err := r.SetPathParam("repo_slug", o.RepoSlug); err != nil {
		return err
	}

	// path param workspace
	if err := r.SetPathParam("workspace", o.Workspace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
