// Code generated by go-swagger; DO NOT EDIT.

package pullrequests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// PostRepositoriesWorkspaceRepoSlugPullrequestsReader is a Reader for the PostRepositoriesWorkspaceRepoSlugPullrequests structure.
type PostRepositoriesWorkspaceRepoSlugPullrequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostRepositoriesWorkspaceRepoSlugPullrequestsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsCreated creates a PostRepositoriesWorkspaceRepoSlugPullrequestsCreated with default headers values
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsCreated() *PostRepositoriesWorkspaceRepoSlugPullrequestsCreated {
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsCreated{}
}

/*PostRepositoriesWorkspaceRepoSlugPullrequestsCreated handles this case with default header values.

The newly created pull request.
*/
type PostRepositoriesWorkspaceRepoSlugPullrequestsCreated struct {
	/*The URL of new newly created pull request.
	 */
	Location string

	Payload *models.Pullrequest
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsCreated) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/pullrequests][%d] postRepositoriesWorkspaceRepoSlugPullrequestsCreated  %+v", 201, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsCreated) GetPayload() *models.Pullrequest {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	o.Payload = new(models.Pullrequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest creates a PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest with default headers values
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest() *PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest {
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest{}
}

/*PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest handles this case with default header values.

If the input document was invalid, or if the caller lacks the privilege to create repositories under the targeted account.
*/
type PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest struct {
	Payload *models.Error
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/pullrequests][%d] postRepositoriesWorkspaceRepoSlugPullrequestsBadRequest  %+v", 400, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized creates a PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized with default headers values
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized() *PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized {
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized{}
}

/*PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized handles this case with default header values.

If the request was not authenticated.
*/
type PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized struct {
	Payload *models.Error
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /repositories/{workspace}/{repo_slug}/pullrequests][%d] postRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
