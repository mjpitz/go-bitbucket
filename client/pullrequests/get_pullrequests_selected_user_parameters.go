// Code generated by go-swagger; DO NOT EDIT.

package pullrequests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPullrequestsSelectedUserParams creates a new GetPullrequestsSelectedUserParams object
// with the default values initialized.
func NewGetPullrequestsSelectedUserParams() *GetPullrequestsSelectedUserParams {
	var ()
	return &GetPullrequestsSelectedUserParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPullrequestsSelectedUserParamsWithTimeout creates a new GetPullrequestsSelectedUserParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPullrequestsSelectedUserParamsWithTimeout(timeout time.Duration) *GetPullrequestsSelectedUserParams {
	var ()
	return &GetPullrequestsSelectedUserParams{

		timeout: timeout,
	}
}

// NewGetPullrequestsSelectedUserParamsWithContext creates a new GetPullrequestsSelectedUserParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPullrequestsSelectedUserParamsWithContext(ctx context.Context) *GetPullrequestsSelectedUserParams {
	var ()
	return &GetPullrequestsSelectedUserParams{

		Context: ctx,
	}
}

// NewGetPullrequestsSelectedUserParamsWithHTTPClient creates a new GetPullrequestsSelectedUserParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPullrequestsSelectedUserParamsWithHTTPClient(client *http.Client) *GetPullrequestsSelectedUserParams {
	var ()
	return &GetPullrequestsSelectedUserParams{
		HTTPClient: client,
	}
}

/*GetPullrequestsSelectedUserParams contains all the parameters to send to the API endpoint
for the get pullrequests selected user operation typically these are written to a http.Request
*/
type GetPullrequestsSelectedUserParams struct {

	/*SelectedUser
	  This can either be the username of the pull request author, the author's UUID
	surrounded by curly-braces, for example: `{account UUID}`, or the author's Atlassian ID.


	*/
	SelectedUser string
	/*State
	  Only return pull requests that are in this state. This parameter can be repeated.

	*/
	State *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) WithTimeout(timeout time.Duration) *GetPullrequestsSelectedUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) WithContext(ctx context.Context) *GetPullrequestsSelectedUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) WithHTTPClient(client *http.Client) *GetPullrequestsSelectedUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSelectedUser adds the selectedUser to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) WithSelectedUser(selectedUser string) *GetPullrequestsSelectedUserParams {
	o.SetSelectedUser(selectedUser)
	return o
}

// SetSelectedUser adds the selectedUser to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) SetSelectedUser(selectedUser string) {
	o.SelectedUser = selectedUser
}

// WithState adds the state to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) WithState(state *string) *GetPullrequestsSelectedUserParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the get pullrequests selected user params
func (o *GetPullrequestsSelectedUserParams) SetState(state *string) {
	o.State = state
}

// WriteToRequest writes these params to a swagger request
func (o *GetPullrequestsSelectedUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param selected_user
	if err := r.SetPathParam("selected_user", o.SelectedUser); err != nil {
		return err
	}

	if o.State != nil {

		// query param state
		var qrState string
		if o.State != nil {
			qrState = *o.State
		}
		qState := qrState
		if qState != "" {
			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
