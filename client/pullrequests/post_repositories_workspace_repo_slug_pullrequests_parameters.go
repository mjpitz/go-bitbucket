// Code generated by go-swagger; DO NOT EDIT.

package pullrequests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsParams creates a new PostRepositoriesWorkspaceRepoSlugPullrequestsParams object
// with the default values initialized.
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsParams() *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	var ()
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsParamsWithTimeout creates a new PostRepositoriesWorkspaceRepoSlugPullrequestsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsParamsWithTimeout(timeout time.Duration) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	var ()
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsParams{

		timeout: timeout,
	}
}

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsParamsWithContext creates a new PostRepositoriesWorkspaceRepoSlugPullrequestsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsParamsWithContext(ctx context.Context) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	var ()
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsParams{

		Context: ctx,
	}
}

// NewPostRepositoriesWorkspaceRepoSlugPullrequestsParamsWithHTTPClient creates a new PostRepositoriesWorkspaceRepoSlugPullrequestsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRepositoriesWorkspaceRepoSlugPullrequestsParamsWithHTTPClient(client *http.Client) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	var ()
	return &PostRepositoriesWorkspaceRepoSlugPullrequestsParams{
		HTTPClient: client,
	}
}

/*PostRepositoriesWorkspaceRepoSlugPullrequestsParams contains all the parameters to send to the API endpoint
for the post repositories workspace repo slug pullrequests operation typically these are written to a http.Request
*/
type PostRepositoriesWorkspaceRepoSlugPullrequestsParams struct {

	/*Body
	  The new pull request.

	The request URL you POST to becomes the destination repository URL. For this reason, you must specify an explicit source repository in the request object if you want to pull from a different repository (fork).

	Since not all elements are required or even mutable, you only need to include the elements you want to initialize, such as the source branch and the title.

	*/
	Body *models.Pullrequest
	/*RepoSlug
	  This can either be the repository slug or the UUID of the repository,
	surrounded by curly-braces, for example: `{repository UUID}`.


	*/
	RepoSlug string
	/*Workspace
	  This can either be the workspace ID (slug) or the workspace UUID
	surrounded by curly-braces, for example: `{workspace UUID}`.


	*/
	Workspace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WithTimeout(timeout time.Duration) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WithContext(ctx context.Context) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WithHTTPClient(client *http.Client) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WithBody(body *models.Pullrequest) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) SetBody(body *models.Pullrequest) {
	o.Body = body
}

// WithRepoSlug adds the repoSlug to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WithRepoSlug(repoSlug string) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	o.SetRepoSlug(repoSlug)
	return o
}

// SetRepoSlug adds the repoSlug to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) SetRepoSlug(repoSlug string) {
	o.RepoSlug = repoSlug
}

// WithWorkspace adds the workspace to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WithWorkspace(workspace string) *PostRepositoriesWorkspaceRepoSlugPullrequestsParams {
	o.SetWorkspace(workspace)
	return o
}

// SetWorkspace adds the workspace to the post repositories workspace repo slug pullrequests params
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) SetWorkspace(workspace string) {
	o.Workspace = workspace
}

// WriteToRequest writes these params to a swagger request
func (o *PostRepositoriesWorkspaceRepoSlugPullrequestsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param repo_slug
	if err := r.SetPathParam("repo_slug", o.RepoSlug); err != nil {
		return err
	}

	// path param workspace
	if err := r.SetPathParam("workspace", o.Workspace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
