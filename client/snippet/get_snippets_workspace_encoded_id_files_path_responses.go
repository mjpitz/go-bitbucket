// Code generated by go-swagger; DO NOT EDIT.

package snippet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetSnippetsWorkspaceEncodedIDFilesPathReader is a Reader for the GetSnippetsWorkspaceEncodedIDFilesPath structure.
type GetSnippetsWorkspaceEncodedIDFilesPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSnippetsWorkspaceEncodedIDFilesPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewGetSnippetsWorkspaceEncodedIDFilesPathFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSnippetsWorkspaceEncodedIDFilesPathForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSnippetsWorkspaceEncodedIDFilesPathNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSnippetsWorkspaceEncodedIDFilesPathFound creates a GetSnippetsWorkspaceEncodedIDFilesPathFound with default headers values
func NewGetSnippetsWorkspaceEncodedIDFilesPathFound() *GetSnippetsWorkspaceEncodedIDFilesPathFound {
	return &GetSnippetsWorkspaceEncodedIDFilesPathFound{}
}

/*GetSnippetsWorkspaceEncodedIDFilesPathFound handles this case with default header values.

A redirect to the most recent revision of the specified file.
*/
type GetSnippetsWorkspaceEncodedIDFilesPathFound struct {
	/*The URL of the most recent file revision.
	 */
	Location string
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathFound) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}/files/{path}][%d] getSnippetsWorkspaceEncodedIdFilesPathFound ", 302)
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDFilesPathForbidden creates a GetSnippetsWorkspaceEncodedIDFilesPathForbidden with default headers values
func NewGetSnippetsWorkspaceEncodedIDFilesPathForbidden() *GetSnippetsWorkspaceEncodedIDFilesPathForbidden {
	return &GetSnippetsWorkspaceEncodedIDFilesPathForbidden{}
}

/*GetSnippetsWorkspaceEncodedIDFilesPathForbidden handles this case with default header values.

If the authenticated user does not have access to the snippet.
*/
type GetSnippetsWorkspaceEncodedIDFilesPathForbidden struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathForbidden) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}/files/{path}][%d] getSnippetsWorkspaceEncodedIdFilesPathForbidden  %+v", 403, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSnippetsWorkspaceEncodedIDFilesPathNotFound creates a GetSnippetsWorkspaceEncodedIDFilesPathNotFound with default headers values
func NewGetSnippetsWorkspaceEncodedIDFilesPathNotFound() *GetSnippetsWorkspaceEncodedIDFilesPathNotFound {
	return &GetSnippetsWorkspaceEncodedIDFilesPathNotFound{}
}

/*GetSnippetsWorkspaceEncodedIDFilesPathNotFound handles this case with default header values.

If the snippet does not exist.
*/
type GetSnippetsWorkspaceEncodedIDFilesPathNotFound struct {
	Payload *models.Error
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathNotFound) Error() string {
	return fmt.Sprintf("[GET /snippets/{workspace}/{encoded_id}/files/{path}][%d] getSnippetsWorkspaceEncodedIdFilesPathNotFound  %+v", 404, o.Payload)
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSnippetsWorkspaceEncodedIDFilesPathNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
