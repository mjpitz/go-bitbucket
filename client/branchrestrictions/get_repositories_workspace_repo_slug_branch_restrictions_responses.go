// Code generated by go-swagger; DO NOT EDIT.

package branchrestrictions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// GetRepositoriesWorkspaceRepoSlugBranchRestrictionsReader is a Reader for the GetRepositoriesWorkspaceRepoSlugBranchRestrictions structure.
type GetRepositoriesWorkspaceRepoSlugBranchRestrictionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK creates a GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK() *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK {
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK handles this case with default header values.

A paginated list of branch restrictions
*/
type GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK struct {
	Payload *models.PaginatedBranchrestrictions
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branch-restrictions][%d] getRepositoriesWorkspaceRepoSlugBranchRestrictionsOK  %+v", 200, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK) GetPayload() *models.PaginatedBranchrestrictions {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginatedBranchrestrictions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized creates a GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized() *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized {
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized handles this case with default header values.

If the request was not authenticated
*/
type GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branch-restrictions][%d] getRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden creates a GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden() *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden {
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden handles this case with default header values.

If the authenticated user does not have admin access to the repository
*/
type GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branch-restrictions][%d] getRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden  %+v", 403, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound creates a GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound with default headers values
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound() *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound {
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound{}
}

/*GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound handles this case with default header values.

If the repository does not exist
*/
type GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound struct {
	Payload *models.Error
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound) Error() string {
	return fmt.Sprintf("[GET /repositories/{workspace}/{repo_slug}/branch-restrictions][%d] getRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound  %+v", 404, o.Payload)
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
