// Code generated by go-swagger; DO NOT EDIT.

package branchrestrictions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mjpitz/go-bitbucket/models"
)

// NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams creates a new PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams object
// with the default values initialized.
func NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams() *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	var ()
	return &PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParamsWithTimeout creates a new PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParamsWithTimeout(timeout time.Duration) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	var ()
	return &PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams{

		timeout: timeout,
	}
}

// NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParamsWithContext creates a new PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParamsWithContext(ctx context.Context) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	var ()
	return &PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams{

		Context: ctx,
	}
}

// NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParamsWithHTTPClient creates a new PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParamsWithHTTPClient(client *http.Client) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	var ()
	return &PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams{
		HTTPClient: client,
	}
}

/*PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams contains all the parameters to send to the API endpoint
for the put repositories workspace repo slug branch restrictions ID operation typically these are written to a http.Request
*/
type PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams struct {

	/*Body
	  The new version of the existing rule

	*/
	Body *models.Branchrestriction
	/*ID
	  The restriction rule's id

	*/
	ID string
	/*RepoSlug
	  This can either be the repository slug or the UUID of the repository,
	surrounded by curly-braces, for example: `{repository UUID}`.


	*/
	RepoSlug string
	/*Workspace
	  This can either be the workspace ID (slug) or the workspace UUID
	surrounded by curly-braces, for example: `{workspace UUID}`.


	*/
	Workspace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithTimeout(timeout time.Duration) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithContext(ctx context.Context) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithHTTPClient(client *http.Client) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithBody(body *models.Branchrestriction) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetBody(body *models.Branchrestriction) {
	o.Body = body
}

// WithID adds the id to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithID(id string) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetID(id string) {
	o.ID = id
}

// WithRepoSlug adds the repoSlug to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithRepoSlug(repoSlug string) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetRepoSlug(repoSlug)
	return o
}

// SetRepoSlug adds the repoSlug to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetRepoSlug(repoSlug string) {
	o.RepoSlug = repoSlug
}

// WithWorkspace adds the workspace to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WithWorkspace(workspace string) *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams {
	o.SetWorkspace(workspace)
	return o
}

// SetWorkspace adds the workspace to the put repositories workspace repo slug branch restrictions ID params
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) SetWorkspace(workspace string) {
	o.Workspace = workspace
}

// WriteToRequest writes these params to a swagger request
func (o *PutRepositoriesWorkspaceRepoSlugBranchRestrictionsIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param repo_slug
	if err := r.SetPathParam("repo_slug", o.RepoSlug); err != nil {
		return err
	}

	// path param workspace
	if err := r.SetPathParam("workspace", o.Workspace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
