// Code generated by go-swagger; DO NOT EDIT.

package branchrestrictions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams creates a new GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams object
// with the default values initialized.
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams() *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	var ()
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParamsWithTimeout creates a new GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParamsWithTimeout(timeout time.Duration) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	var ()
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams{

		timeout: timeout,
	}
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParamsWithContext creates a new GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParamsWithContext(ctx context.Context) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	var ()
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams{

		Context: ctx,
	}
}

// NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParamsWithHTTPClient creates a new GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRepositoriesWorkspaceRepoSlugBranchRestrictionsParamsWithHTTPClient(client *http.Client) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	var ()
	return &GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams{
		HTTPClient: client,
	}
}

/*GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams contains all the parameters to send to the API endpoint
for the get repositories workspace repo slug branch restrictions operation typically these are written to a http.Request
*/
type GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams struct {

	/*Kind
	  Branch restrictions of this type

	*/
	Kind *string
	/*Pattern
	  Branch restrictions applied to branches of this pattern

	*/
	Pattern *string
	/*RepoSlug
	  This can either be the repository slug or the UUID of the repository,
	surrounded by curly-braces, for example: `{repository UUID}`.


	*/
	RepoSlug string
	/*Workspace
	  This can either be the workspace ID (slug) or the workspace UUID
	surrounded by curly-braces, for example: `{workspace UUID}`.


	*/
	Workspace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithTimeout(timeout time.Duration) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithContext(ctx context.Context) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithHTTPClient(client *http.Client) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKind adds the kind to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithKind(kind *string) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetKind(kind)
	return o
}

// SetKind adds the kind to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetKind(kind *string) {
	o.Kind = kind
}

// WithPattern adds the pattern to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithPattern(pattern *string) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetPattern(pattern)
	return o
}

// SetPattern adds the pattern to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetPattern(pattern *string) {
	o.Pattern = pattern
}

// WithRepoSlug adds the repoSlug to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithRepoSlug(repoSlug string) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetRepoSlug(repoSlug)
	return o
}

// SetRepoSlug adds the repoSlug to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetRepoSlug(repoSlug string) {
	o.RepoSlug = repoSlug
}

// WithWorkspace adds the workspace to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WithWorkspace(workspace string) *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams {
	o.SetWorkspace(workspace)
	return o
}

// SetWorkspace adds the workspace to the get repositories workspace repo slug branch restrictions params
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) SetWorkspace(workspace string) {
	o.Workspace = workspace
}

// WriteToRequest writes these params to a swagger request
func (o *GetRepositoriesWorkspaceRepoSlugBranchRestrictionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Kind != nil {

		// query param kind
		var qrKind string
		if o.Kind != nil {
			qrKind = *o.Kind
		}
		qKind := qrKind
		if qKind != "" {
			if err := r.SetQueryParam("kind", qKind); err != nil {
				return err
			}
		}

	}

	if o.Pattern != nil {

		// query param pattern
		var qrPattern string
		if o.Pattern != nil {
			qrPattern = *o.Pattern
		}
		qPattern := qrPattern
		if qPattern != "" {
			if err := r.SetQueryParam("pattern", qPattern); err != nil {
				return err
			}
		}

	}

	// path param repo_slug
	if err := r.SetPathParam("repo_slug", o.RepoSlug); err != nil {
		return err
	}

	// path param workspace
	if err := r.SetPathParam("workspace", o.Workspace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
